# name: Build

# on:
#   workflow_dispatch:
#   pull_request:
#     # branches:
#     #   - main

# concurrency:
#   group: main-branch
#   cancel-in-progress: false

# jobs:

#   build:
#     runs-on: ubuntu-latest
#     outputs:
#       commit_id: ${{ steps.commit_info.outputs.commit_id }}
#       author: ${{ steps.commit_info.outputs.author }}
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Get Commit Details
#         id: commit_info
#         run: |
#           echo commit_id=$(git rev-parse HEAD)
#           echo author=$(git log -1 --pretty=format:'%an')
#           echo "commit_id=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
#           echo "author=$(git log -1 --pretty=format:'%an')" >> "$GITHUB_OUTPUT"

#       - name: Deploy .env file from GitHub Secrets
#         run: | 
#          echo "${{ secrets.ENV }}" > server/.env 
          
#       - name: Install Dependencies
#         run: |
#           chmod +x scripts/build.sh
#           echo "‚úîÔ∏è‚úîÔ∏è‚úîÔ∏èüõ´üõ´version checking "
#           node -v
#           npm -v
#           ./scripts/build.sh

#   Trivy:
#       runs-on: ubuntu-latest
#       needs: build
#       steps:
#         - uses: actions/checkout@v4
        
#         - name: Run Trivy Vulnerability Scan
#           uses: aquasecurity/trivy-action@master
#           with:
#             scan-type: "fs"
#             format: "table"
#             exit-code: "0"
#             severity: "CRITICAL,HIGH,LOW"
#             output: "trivy_report.json"
    
#         - name: Upload Trivy Scan Report
#           uses: actions/upload-artifact@v4.6.1
#           with:
#             name: TRIVY-CODE-SCAN-REPORT
#             path: trivy_report.json
          
      
#   notify:
#     needs: [build, Trivy]
#     if: always()
#     runs-on: ubuntu-latest
#     steps:    
#       - name: Download Trivy Report
#         uses: actions/download-artifact@v4
#         with:
#           name: TRIVY-CODE-SCAN-REPORT  
#           path: ./  

#       - name: Verify Artifact Exists
#         run: | 
#             ls -al
#             pwd

#       - name: Read JSON file
#         id: read_json
#         run: echo "json_content=$(cat trivy_report.json | jq -R -s .)" >> $GITHUB_ENV

#       - name: Send Notification
#         uses: cinotify/github-action@main
#         with:
#           to: 'kapil.trainee@panaceainfosec.com,shivramdutt.trainee@panaceainfosec.com,ravinder@panaceainfosec.com, kishore@panaceainfosec.com, rajat.agarwal@panaceainfosec.com'
          
#           subject: ${{ needs.build.result == 'success' && '‚úÖ Build Successful - Main Branch' || '‚ùå Build Failed - Main Branch' }} PI Audit Management System
#           body: |
#               <strong>Commit ID:</strong> ${{ needs.build.outputs.commit_id }}<br>
#               <strong>Author:</strong> ${{ needs.build.outputs.author }}<br>
#               <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">üîó View Logs</a>
#           type: 'text/html'
#           attachment: './trivy_report.json' 


        
